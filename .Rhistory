}
plotter(compare_tifs[1], "BLA")
plotter(compare_tifs[1])
plotter <- function(file_name){
x <- raster(file_name)
if(grepl("growth", file_name)){
values(x) <- round(values(x), 3)
}
df <- as.data.frame(x, xy = TRUE)
target_col = gsub(".tif", "", file_name)
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(x, y)) +
geom_tile(aes(fill =as.character(round(get(target_col))))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
plotter <- function(file_name){
x <- raster(file_name)
if(grepl("growth", file_name)){
values(x) <- round(values(x), 3)
}
df <- as.data.frame(x, xy = TRUE)
target_col = gsub(".tif", "", file_name)
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(x, y)) +
geom_tile(aes(fill =as.character(round(get(target_col))))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
plotter <- function(file_name){
x <- raster(file_name)
if(grepl("growth", file_name)){
values(x) <- round(values(x), 3)
}
df <- as.data.frame(x, xy = TRUE)
target_col = gsub(".tif", "", file_name)
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(x, y)) +
geom_tile(aes(fill =as.character(round(get(target_col))))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
plotter <- function(file_name){
x <- raster(file_name)
if(grepl("growth", file_name)){
values(x) <- round(values(x), 3)
}
df <- as.data.frame(x, xy = TRUE)
target_col = gsub(".tif", "", file_name)
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(x, y)) +
geom_tile(aes(fill =as.character(round(get(target_col))))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
plotter(compare_tifs[1])
test <- raster(compare_tifs[1])
test_df <- as.data.frame(x, xy=T)
#---- test ----
test <- raster(compare_tifs[1])
#---- prepare plot ----
plotter <- function(file_name){
x <- raster(file_name)
if(grepl("growth", file_name)){
values(x) <- round(values(x), 3)
}
df <- as.data.frame(x, xy = TRUE)
target_col = gsub(".tif", "", file_name)
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(x, y)) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
test_df <- as.data.frame(test, xy=T)
unique(test$compare_rcp2p6)
sum(is.na(test$compare_rcp2p6))
sum(is.na(test_df$compare_rcp2p6))
plotter(compare_tifs[1])
plotter <- function(file_name){
x <- raster(file_name)
if(grepl("growth", file_name)){
values(x) <- round(values(x), 3)
}
df <- as.data.frame(x, xy = TRUE)
target_col = gsub(".tif", "", file_name)
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
plotter(compare_tifs[1])
test
test_df
test <- projectRaster(test, crs = "EPSG:4326",method = 'ngb')
test <- setMinMax(test)
test <- setMinMax(test)
test
df <- readRDS("bin_data.rds")
df
names(df)
source("C:/Users/lenovo/Documents/GitHub/sustainability_dashboard/other_files/helper_functions.R", local = TRUE)
df <- readRDS("bin_data.rds")
# for the plots where the distribution is across all
all_change <- c(df$changecal_rcp2p6, df$changecal_rcp6p0, df$changecal_rcp8p5)
all_growth <- c(df$growth_ratecal_rcp2p6, df$growth_ratecal_rcp6p0, df$growth_ratecal_rcp8p5)
df_all <- as.data.frame(cbind(all_change, all_growth))
df_all$bin_change <- new_bins(df_all$all_change, breaks)
# assign back to df
df$compare_rcp2p6 <- df_all$bin_change[1:2277587]
df$compare_rcp6p0 <- df_all$bin_change[2277588: 4555174]
df$compare_rcp8p5 <- df_all$bin_change[4555175:6832761]
target_cols <- c("compare_rcp2p6", "compare_rcp6p0", "compare_rcp8p5")
source("leaflet.R", local = TRUE)
# other libraries
library(tidyverse)
library(ggplot2)
library(cmocean)
library(ggthemes)
library(cowplot)
#---- load tifs ----
source("C:/Users/lenovo/Documents/GitHub/sustainability_dashboard/other_files/helper_functions.R", local = TRUE)
df <- readRDS("bin_data.rds")
breaks <- c(0, 0.05, 0.1, 0.3, 0.5, 1)
# for the plots where the distribution is across all
all_change <- c(df$changecal_rcp2p6, df$changecal_rcp6p0, df$changecal_rcp8p5)
all_growth <- c(df$growth_ratecal_rcp2p6, df$growth_ratecal_rcp6p0, df$growth_ratecal_rcp8p5)
df_all <- as.data.frame(cbind(all_change, all_growth))
df_all$bin_change <- new_bins(df_all$all_change, breaks)
# assign back to df
df$compare_rcp2p6 <- df_all$bin_change[1:2277587]
df$compare_rcp6p0 <- df_all$bin_change[2277588: 4555174]
df$compare_rcp8p5 <- df_all$bin_change[4555175:6832761]
target_cols <- c("compare_rcp2p6", "compare_rcp6p0", "compare_rcp8p5")
plotter <- function(target_col){
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
plotter <- function(df, target_col){
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
plotter(df, target_cols[1])
plotter <- function(df, target_col){
df[[target_col]] <- round(df[[target_col]])
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
return(out_plot)
#save_plot(paste0(target_cols[i], ".pdf"), out_plot, base_height = 7,dpi = "print")
}
plotter(df, target_cols[1])
plotter(df, target_cols[1])
#---- prepare plot ----
plotter <- function(df, target_col){
df[[target_col]] <- round(df[[target_col]])
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
save_plot(paste0(target_col, ".png"), out_plot, base_height = 7,dpi = "print")
}
plotter(df, target_cols[1])
#---- prepare plot ----
plotter <- function(df, target_col){
df[[target_col]] <- round(df[[target_col]])
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
ggsave(paste0(target_col, ".png"), out_plot dpi = 300)
#save_plot(paste0(target_col, ".png"), out_plot, base_height = 7,dpi = "print")
}
#---- prepare plot ----
plotter <- function(df, target_col){
df[[target_col]] <- round(df[[target_col]])
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
ggsave(paste0(target_col, ".png"), out_plot, dpi = 300)
#save_plot(paste0(target_col, ".png"), out_plot, base_height = 7,dpi = "print")
}
plotter(df, target_cols[1])
#---- prepare plot ----
plotter <- function(df, target_col){
df[[target_col]] <- round(df[[target_col]])
sort_values <- sort(unique(df[[target_col]]))
my_color <- cmocean(name = 'curl', direction = -1, clip = 0.1)(11)
names(my_color) <- as.character(sort_values)
out_plot <- ggplot(df, aes(get("x"), get("y"))) +
geom_tile(aes(fill =as.character(get(target_col)))) +
xlim(-180, 180) +
ylim(-90, 90) +
coord_equal() + # maybe I need but idk
scale_fill_manual(values = my_color, name = "Bin Mean",
labels = sort_values)  +
theme_map() +
theme(legend.direction = 'vertical',
legend.position = c(.05, .25),
legend.spacing.y = unit(0, "pt"),
legend.title = element_text(size = 9, color = "#4e4d47"),
legend.text = element_text(size = 7, color = "#4e4d47"),
plot.caption = element_text(size = 6,
hjust = 0.92,
margin = margin(t = 0.2,
b = 0,
unit = "cm"),
color = "#939184"),
plot.title = element_text(hjust = 0.5, color = "#4e4d47"),
plot.subtitle = element_text(hjust = 0.5, color = "#4e4d47"),
panel.background = element_rect(fill = "white")) +
labs(x = NULL,
y = NULL,
caption = "Author: Bjoern Komander. More information ... ")
#ggsave(paste0(target_col, ".png"), out_plot, dpi = 300)
save_plot(paste0(target_col, ".png"), out_plot, base_height = 7,dpi = "print")
}
plotter(df, target_cols[1])
plotter(df, target_cols[2])
plotter(df, target_cols[3])
